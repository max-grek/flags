
./test/Main.hs,37
module Main Main0,1
main main2,3

./src/Main.hs,56
module Main Main0,1
flags flags7,8
main main29,30

./src/Internal/Process.hs,664
module Internal.ProcessInternal.Process0,1
data Strategy Strategy19,20
data Strategy = KVPair KVPair19,20
data Strategy = KVPair | Distinct Distinct19,20
data Strategy = KVPair | Distinct | DistinctTypedDistinctTyped19,20
data ShortShort21,22
data LongLong22,23
class Mode Mode24,25
  process process25,26
instance Mode Mode Short27,28
  process process28,29
deduceStrategy deduceStrategy48,49
check check60,61
checkForArg checkForArg63,64
checkForCompatibility checkForCompatibility68,69
_forUnknown _forUnknown79,80
_forBoolArg _forBoolArg86,87
instance Mode Mode Long91,92
  process process92,93
_splitBy _splitBy107,108

./src/Internal/Types4.hs,957
module Internal.Types Internal.Types2,3
data Flag Flag8,9
data Flag a = FlagFlag8,9
  { getName getName9,10
  , getValue getValue10,11
  , getDescription getDescription11,12
data Value Value14,15
data Value = forall forall14,15
instance Show Show Value16,17
  show show17,18
data Policy Policy19,20
data Policy = PolicyPolicy19,20
  { modeLength modeLength20,21
  , modePrefix modePrefix21,22
mkPolicy mkPolicy24,25
newtype Flags Flags28,29
newtype Flags k v = Flags { unFlags unFlags28,29
newtype Args Args29,30
newtype Args k v = Args { unArgs unArgs29,30
newtype NonEmptyArgs NonEmptyArgs30,31
newtype NonEmptyArgs a = NEArgs NEArgs30,31
newtype NonEmptyArgs a = NEArgs { unNEArgs unNEArgs30,31
data Error Error32,33
data Error = UnknownFlag UnknownFlag32,33
           | FlagSyntax FlagSyntax33,34
           | IncompatibleType IncompatibleType34,35
instance Show Show Error36,37
  show show37,38

./src/Internal/Types.hs,778
module Internal.Types Internal.Types2,3
data Flag Flag8,9
data Flag a = FlagFlag8,9
  { getName getName9,10
  , getValue getValue10,11
  , getDescription getDescription11,12
data Value Value14,15
data Value = forall forall14,15
instance Show Show Value16,17
  show show17,18
newtype Flags Flags19,20
newtype Flags k v = Flags { unFlags unFlags19,20
newtype Args Args20,21
newtype Args k v = Args { unArgs unArgs20,21
newtype NonEmptyArgs NonEmptyArgs21,22
newtype NonEmptyArgs a = NEArgs NEArgs21,22
newtype NonEmptyArgs a = NEArgs { unNEArgs unNEArgs21,22
data ErrorError23,24
  = UnknownFlag UnknownFlag24,25
  | FlagSyntax FlagSyntax25,26
  | IncompatibleType IncompatibleType26,27
instance Show Show Error28,29
  show show29,30

./src/Process.hs,769
module ProcessProcess0,1
data Strategy Strategy20,21
data Strategy = KVPair KVPair20,21
data Strategy = KVPair | Distinct Distinct20,21
data Strategy = KVPair | Distinct | DistinctTypedDistinctTyped20,21
data ShortShort22,23
data LongLong23,24
class Mode Mode25,26
  enrichFlagName enrichFlagName26,27
  process process27,28
instance Mode Mode Short29,30
  enrichFlagName enrichFlagName30,31
  process process33,34
deduceStrategy deduceStrategy52,53
check check64,65
checkForArg checkForArg67,68
checkForCompatibility checkForCompatibility72,73
_forUnknown _forUnknown91,92
_forBoolArg _forBoolArg98,99
instance Mode Mode Long103,104
  enrichFlagName enrichFlagName104,105
  process process107,108
_splitBy _splitBy121,122

./src/Flag5.hs,264
module FlagFlag3,4
type FlagName FlagName26,27
type Description Description27,28
define define29,30
parseArgs parseArgs32,33
_parse _parse43,44
_process _process50,51
_compareTypes _compareTypes75,76
_splitBy _splitBy102,103
flags flags108,109

./src/Flag2.hs,278
module Flag2Flag22,3
type FlagName FlagName27,28
type Description Description28,29
define define30,31
parseArgs parseArgs33,34
_parse _parse44,45
_process _process52,53
_compareTypes _compareTypes78,79
_lookupType _lookupType102,103
_splitBy _splitBy105,106

./src/Flag3.hs,602
module Flag3Flag33,4
type FlagName FlagName27,28
type Description Description28,29
define define30,31
parseArgs parseArgs33,34
_parse _parse45,46
newtype Long Long53,54
newtype Long = L L53,54
instance Mode Mode Long55,56
  enrichFlagName enrichFlagName56,57
  process process59,60
newtype Short Short88,89
newtype Short = S S88,89
_checkForSyntax _checkForSyntax90,91
instance Mode Mode Short99,100
  enrichFlagName enrichFlagName100,101
  process process103,104
brot brot127,128
_splitBy _splitBy130,131
_compareTypes _compareTypes136,137
flags flags161,162

./src/Flag/Types3.hs,1100
module Flag.Types3 Flag.Types32,3
data ShortModeShortMode8,9
data LongModeLongMode9,10
data Flag Flag11,12
data Flag a = FlagFlag11,12
  { getName getName12,13
  , getValue getValue13,14
  , getDescription getDescription14,15
data Value Value17,18
data Value = forall forall17,18
instance Show Show Value19,20
  show show20,21
data Policy Policy22,23
data Policy = PolicyPolicy22,23
  { modeLength modeLength23,24
  , modePrefix modePrefix24,25
mkPolicy mkPolicy27,28
newtype Flags Flags31,32
newtype Flags k v = Flags { unFlags unFlags31,32
newtype Args Args32,33
newtype Args k v = Args { unArgs unArgs32,33
newtype NonEmptyArgs NonEmptyArgs33,34
newtype NonEmptyArgs a = NEArgs NEArgs33,34
newtype NonEmptyArgs a = NEArgs { unNEArgs unNEArgs33,34
class Mode Mode35,36
  enrichFlagName enrichFlagName36,37
  process process37,38
data Error Error39,40
data Error = UnknownFlag UnknownFlag39,40
           | FlagSyntax FlagSyntax40,41
           | IncompatibleType IncompatibleType41,42
instance Show Show Error43,44
  show show44,45

./src/Flag/Types2.hs,700
module Flag.Types2 Flag.Types22,3
data ShortShort8,9
data LongLong9,10
data Flag Flag11,12
data Flag a = FlagFlag11,12
  { getName getName12,13
  , getValue getValue13,14
  , getDescription getDescription14,15
data Value Value17,18
data Value = forall forall17,18
instance Show Show Value19,20
  show show20,21
newtype Flags Flags22,23
newtype Flags k v = Flags { unFlags unFlags22,23
newtype Args Args23,24
newtype Args k v = Args { unArgs unArgs23,24
data Error Error25,26
data Error = UnknownFlag UnknownFlag25,26
           | FlagSyntax FlagSyntax26,27
           | IncompatibleType IncompatibleType27,28
instance Show Show Error29,30
  show show30,31

./src/Flag/Types5.hs,1423
module Flag.Types5 Flag.Types52,3
data ShortModeShortMode8,9
data LongModeLongMode9,10
data Flag Flag11,12
data Flag a = FlagFlag11,12
  { getName getName12,13
  , getValue getValue13,14
  , getDescription getDescription14,15
data Value Value17,18
data Value = forall forall17,18
instance Show Show Value19,20
  show show20,21
data Policy Policy22,23
data Policy = PolicyPolicy22,23
  { modeLength modeLength23,24
  , modePrefix modePrefix24,25
mkPolicy mkPolicy27,28
newtype Flags Flags31,32
newtype Flags k v = Flags { unFlags unFlags31,32
newtype Args Args32,33
newtype Args k v = Args { unArgs unArgs32,33
newtype NonEmptyArgs NonEmptyArgs33,34
newtype NonEmptyArgs a = NEArgs NEArgs33,34
newtype NonEmptyArgs a = NEArgs { unNEArgs unNEArgs33,34
class Mode Mode35,36
  enrichFlagName enrichFlagName36,37
  process process37,38
newtype UnknownFlagErr UnknownFlagErr39,40
newtype UnknownFlagErr = UnknownFlag UnknownFlag39,40
newtype FlagSyntaxErr FlagSyntaxErr40,41
newtype FlagSyntaxErr = FlagSyntax FlagSyntax40,41
newtype IncompatibleTypeErr IncompatibleTypeErr41,42
newtype IncompatibleTypeErr = IncompatibleType IncompatibleType41,42
data Error Error43,44
data Error = UnknownFlag UnknownFlag43,44
           | FlagSyntax FlagSyntax44,45
           | IncompatibleType IncompatibleType45,46
instance Show Show Error47,48
  show show48,49

./src/Flag/Types4.hs,951
module Flag.Types4 Flag.Types42,3
data Flag Flag8,9
data Flag a = FlagFlag8,9
  { getName getName9,10
  , getValue getValue10,11
  , getDescription getDescription11,12
data Value Value14,15
data Value = forall forall14,15
instance Show Show Value16,17
  show show17,18
data Policy Policy19,20
data Policy = PolicyPolicy19,20
  { modeLength modeLength20,21
  , modePrefix modePrefix21,22
mkPolicy mkPolicy24,25
newtype Flags Flags28,29
newtype Flags k v = Flags { unFlags unFlags28,29
newtype Args Args29,30
newtype Args k v = Args { unArgs unArgs29,30
newtype NonEmptyArgs NonEmptyArgs30,31
newtype NonEmptyArgs a = NEArgs NEArgs30,31
newtype NonEmptyArgs a = NEArgs { unNEArgs unNEArgs30,31
data Error Error32,33
data Error = UnknownFlag UnknownFlag32,33
           | FlagSyntax FlagSyntax33,34
           | IncompatibleType IncompatibleType34,35
instance Show Show Error36,37
  show show37,38

./src/Flag/Types.hs,697
module Flag.Types Flag.Types2,3
data ShortShort7,8
data LongLong8,9
data Flag Flag10,11
data Flag a = FlagFlag10,11
  { getName getName11,12
  , getValue getValue12,13
  , getDescription getDescription13,14
data Value Value16,17
data Value = forall forall16,17
instance Show Show Value18,19
  show show19,20
newtype Flags Flags21,22
newtype Flags k v = Flags { unFlags unFlags21,22
newtype Args Args22,23
newtype Args k v = Args { unArgs unArgs22,23
data Error Error24,25
data Error = UnknownFlag UnknownFlag24,25
           | FlagSyntax FlagSyntax25,26
           | IncompatibleType IncompatibleType26,27
instance Show Show Error28,29
  show show29,30

./src/Flag4.hs,158
module Flag4Flag43,4
type FlagName FlagName23,24
type Description Description24,25
define define26,27
parseArgs parseArgs29,30
_parse _parse41,42

./src/Flag.hs,156
module FlagFlag3,4
type FlagName FlagName23,24
type Description Description24,25
define define26,27
parseArgs parseArgs29,30
_parse _parse39,40
